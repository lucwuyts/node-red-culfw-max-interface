[
    {
        "id": "9f49092d.477e18",
        "type": "tab",
        "label": "UI (some tests)",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1119b2.abf3964e",
        "type": "tab",
        "label": "culfw messages for testing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "240222d6.2d9b9e",
        "type": "tab",
        "label": "culfw Config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d2b21613.ad4a58",
        "type": "tab",
        "label": "culfw inkomende berichten",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4eef0155.6397c",
        "type": "tab",
        "label": "culfw  -  uitgaande berichten",
        "disabled": false,
        "info": ""
    },
    {
        "id": "27628eec.90fe82",
        "type": "tab",
        "label": "culfw Div",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a4ce8684.3e9218",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "aa6997d1.a021d8",
        "type": "mqtt-broker",
        "name": "",
        "broker": "10.0.250.52",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "f4852363.e891d",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "42c6610c.aa38c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "f646d009.1830f",
        "type": "mqtt-broker",
        "broker": "automation",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "verifyservercert": true,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": null,
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": null,
        "willPayload": ""
    },
    {
        "id": "82d780f7.7d288",
        "type": "mqtt-broker",
        "name": "",
        "broker": "10.0.250.52",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "verifyservercert": true,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "2",
        "birthRetain": "true",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": null,
        "willPayload": ""
    },
    {
        "id": "3bdcdb46.1f4b44",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "d450f0a7.81128",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "8a50f58a.83fee8",
        "type": "ui_group",
        "name": "Pairing",
        "tab": "ed309753.b80dc8",
        "order": 1,
        "disp": true,
        "width": "14",
        "collapse": false
    },
    {
        "id": "a7510c97.d4775",
        "type": "ui_group",
        "name": "RUN TIME",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4e1181dc.53dca",
        "type": "serial-port",
        "serialport": "COM6",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "ed309753.b80dc8",
        "type": "ui_tab",
        "name": "TEST MAX! - CULFW",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "74b15cb6.0ee3c4",
        "type": "debug",
        "z": "d2b21613.ad4a58",
        "name": "Show every incomming message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 260,
        "wires": []
    },
    {
        "id": "85df21ea.37965",
        "type": "tcp in",
        "z": "d2b21613.ad4a58",
        "name": "",
        "server": "client",
        "host": "10.0.250.65",
        "port": "2323",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 120,
        "y": 260,
        "wires": [
            [
                "7d7e3a57.cc7734"
            ]
        ]
    },
    {
        "id": "2f892c1e.2edfd4",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "Parse base info",
        "func": "// complete message enters here\n//\n\nvar raw = msg.payload;\nvar obj = {};\n\nobj.msgCnt = raw.substr(3,2);\nobj.msgFlag = raw.substr(5,2);\nobj.msgTypeRaw = raw.substr(7,2);\nvar cmd = global.get('msgId2Cmd','memoryOnly')(obj.msgTypeRaw);\nobj.msgType = cmd ? cmd : obj.msgTypeRaw;\nobj.src = raw.substr(9,6).toLowerCase();\nobj.dst = raw.substr( 15,6).toLowerCase();\n\nobj.groupid = global.get('parseAsHex','memoryOnly')(raw,21,2);\n\n\nvar lenNoRSSI = global.get('get_messageLength','memoryOnly')(obj.msgTypeRaw);\nif( lenNoRSSI != 0 && raw.length > lenNoRSSI ){\n    // laatste 2 karakters = rssi\n    var rssi = Number.parseInt(raw.slice(-2), 16);\n    obj.rssi = (rssi >= 128 ? (((rssi - 256) / 2) - 74) : ((rssi / 2) - 74));\n    // strip off RSSI info\n    raw = raw.substr(0,lenNoRSSI);\n}\nelse{\n    obj.rssi = null;\n}\n\nobj.payload = raw.substr(23, (2*raw.length - 18));\n\n\nmsg.payload = obj;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 420,
        "wires": [
            [
                "98824b1.f883eb8"
            ]
        ]
    },
    {
        "id": "e513ed74.cb216",
        "type": "debug",
        "z": "d2b21613.ad4a58",
        "name": "Does not start with \"Z\"",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 340,
        "wires": []
    },
    {
        "id": "da991879.f3a6b8",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "Eerste karakter",
        "func": "var raw = msg.payload;\nvar eerste = raw.substr(0,1);\n\nvar msg1= null;\nvar msg2 = null;\n\nif( eerste != 'Z' ){\n    msg1 = {payload: raw };\n}\nelse{\n    msg2 = {payload: raw };\n}\n\nreturn [ msg1 , msg2 ];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "e513ed74.cb216"
            ],
            [
                "5a043514.1e126c"
            ]
        ]
    },
    {
        "id": "5a043514.1e126c",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "Verify length",
        "func": "// verify message length\n// 2 checks -> with and without RSSI\nvar msg2 = null;\nvar raw = msg.payload;\n\nvar hexStr = \"0x\"+raw.substr(1,2);\nvar len = parseInt( Number(hexStr) , 10 );\nvar totalLen = len*2 + 3;\n\nif( ! (totalLen == raw.length || totalLen + 2 == raw.length) ){\n    msg2 ={ payload: raw +'\\r\\nerror lengte '+raw.length + \" - verwacht: \" + len +\"(+ 2 RSSI)\"};\n}\n\nreturn [msg,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 440,
        "wires": [
            [
                "2f892c1e.2edfd4"
            ],
            [
                "4fb2e47e.2691ac"
            ]
        ]
    },
    {
        "id": "c7fea7e9.cfb6f8",
        "type": "debug",
        "z": "d2b21613.ad4a58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 740,
        "wires": []
    },
    {
        "id": "d11f4fd7.02d32",
        "type": "switch",
        "z": "d2b21613.ad4a58",
        "name": "switch on msgTypeRaw",
        "property": "payload.msgTypeRaw",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "00",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "03",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "11",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "20",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "22",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "30",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "40",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "42",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "60",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "70",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "F1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 14,
        "x": 370,
        "y": 740,
        "wires": [
            [
                "7f0f46d.2e4c6b8"
            ],
            [
                "dffca064.9ceec"
            ],
            [
                "ffede942.fdb068"
            ],
            [
                "2bdb096f.39ffe6"
            ],
            [
                "91ef6c3e.5418c"
            ],
            [
                "b1c39d08.78a2e"
            ],
            [
                "1b1f05ac.af7dba"
            ],
            [
                "ec986c0f.75754"
            ],
            [
                "55e7599e.ba9f18"
            ],
            [
                "e89745d6.ef7848"
            ],
            [
                "2df3b610.a611da"
            ],
            [
                "5437156b.65840c"
            ],
            [
                "c462c16.e1b734"
            ],
            [
                "66b77563.aaf92c"
            ]
        ]
    },
    {
        "id": "e89745d6.ef7848",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "42 = WallThermostatControl",
        "func": "// Z0CFF0442124C8200000000  A208\n\nvar data = msg.payload.payload;\n\nmsg.payload.desiredTemp = global.get('parseAsHex','memoryonly')(data,0,2) / 2;\nmsg.payload.measuredTemp = global.get('parseAsHex','memoryonly')(data,2,2) / 10;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 980,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "888b6aa3.4bfd78",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "Strip crlf",
        "func": "// haal CRLF eraf\nvar raw=msg.payload;\nmsg.payload = raw.substr(0, raw.length - 2 );\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 320,
        "wires": [
            [
                "da991879.f3a6b8"
            ]
        ]
    },
    {
        "id": "2df3b610.a611da",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "60 = ThermostatState",
        "func": "var obj = msg.payload;\nvar data = msg.payload.payload;\n\nvar bits2 = global.get('parseAsHex','memoryonly')(data,0,2);\n\nobj.valveposition = global.get('parseAsHex','memoryonly')(data,2,2);\nobj.desiredTemp = global.get('parseAsHex','memoryonly')(data,4,2) / 2;\n\nvar until1 = global.get('parseAsHex','memoryonly')(data,6,2);\nvar until2 = global.get('parseAsHex','memoryonly')(data,8,2);\nvar until3 = global.get('parseAsHex','memoryonly')(data,10,2);\n\nobj.mode = global.get('getBits','memoryonly')(bits2, 0, 2);\nvar ctrlmode = global.get('get_ctrl_mode','memoryonly')(obj.mode);\nobj.modeStr =  ctrlmode ? ctrlmode : obj.mode;\nobj.dstsetting = global.get('getBits','memoryonly')(bits2, 3, 1);  //is automatically switching to DST activated\nobj.langateway = global.get('getBits','memoryonly')(bits2, 4, 1);  //??\nobj.panel = global.get('getBits','memoryonly')(bits2, 5, 1);       //1 if the heating thermostat is locked for manually setting the temperature at the device\nobj.rferror = global.get('getBits','memoryonly')(bits2, 6, 1);     //communication with link partner (what does that mean?)\nobj.batterylow = global.get('getBits','memoryonly')(bits2, 7, 1);  //1 if battery is low\nobj.battery = obj.batterylow ? \"low\" : \"ok\";\n\nif (until3 > 0) data.untilStr = global.get('MAX_ParseDateTime','memoryonly')(until1, until2, until3);\nobj.measuredTemp = (until2 > 0) ? (((until1 & 0x01)<<8) + until2) / 10 : 0;\n\n//If the control mode is not \"temporary\", the cube sends the current (measured) temperature\nif ((obj.mode == 2) || (obj.measuredTemp == 0)) obj.measuredTemp = null;\nif (obj.mode != 2) delete obj.untilStr;\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 1020,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "ec986c0f.75754",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "30= ShutterContactState",
        "func": "\n\nvar obj = msg.payload;\nvar data = msg.payload.payload;\n\nvar bits = global.get('parseAsHex', 'memoryOnly')(data,0,2);\nobj.isopen = (global.get('getBits', 'memoryOnly')(bits, 0, 2) === 0) ? 0 : 1;\nobj.unkbits = global.get('getBits', 'memoryOnly')(bits, 2, 4);\nobj.rferror = global.get('getBits', 'memoryOnly')(bits, 6, 1);\nobj.batterylow = global.get('getBits', 'memoryOnly')(bits, 7, 1);\nobj.battery = data.batterylow ? \"low\" : \"ok\";\n\t\t\nmsg.payload = obj;\t\t\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 900,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "7f0f46d.2e4c6b8",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "00 = PairPing",
        "func": "// A pairing request is only allowed when the global flag \"AllowPairing\" is set to true.\n//\nvar config = global.get(\"culfw_config\");\nif( config.AllowPairing){\n    \n    var obj = msg.payload;\n    var data = obj.payload;\n    \n    obj.firmware = global.get('parseAsHex', 'memoryOnly')(data,0,2);\n    obj.deviceTypeRaw = global.get('parseAsHex', 'memoryOnly')(data,2,2);\n    obj.deviceType = global.get('get_deviceType','memoryOnly')(obj.deviceTypeRaw);\n    obj.testresult = global.get('parseAsHex', 'memoryOnly')(data,4,2);\n    obj.serial = global.get('hex_to_ascii','memoryOnly')(data.substr(6));\n    \n    //save deviceType and serial\n    msg.culfw.deviceType = obj.deviceType;\n    msg.culfw.serial = obj.serial;\n    \n    var Name = msg.culfw.Name;\n    global.set(Name,msg.culfw);\n    \n    msg.culfw.BusyWith = 1;\n    msg.culfw.Step = -1;\n\n}\nelse{\n    return null;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 620,
        "wires": [
            [
                "86582ae8.52a6d8",
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "55e7599e.ba9f18",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "40 = SetTemperature",
        "func": "var obj = msg.payload;\nvar data = obj.payload;\n\n\nvar bits =  global.get('parseAsHex', 'memoryOnly')(data,0,2);\nmsg.payload.mode = bits >> 6;\nvar ctrlmode = global.get('get_ctrl_mode','memoryOnly')(msg.payload.mode);\nmsg.payload.modeStr = ctrlmode ? ctrlmode : msg.payload.mode;\nmsg.payload.desiredTemp = (bits & 0x3F) / 2.0;      \n\t\t\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 940,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "ffede942.fdb068",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "03 = Time Information",
        "func": "// Z 0FA50003 17D0C0 124C82 \n//     payload = 0014134AD420\n\nvar obj = msg.payload;\nvar data = obj.payload;\n\nobj.year = 2000+ global.get('parseAsHex', 'memoryOnly')(data,0,2);\nobj.day =  global.get('parseAsHex', 'memoryOnly')(data,2,2);\nobj.hour =  global.get('parseAsHex', 'memoryOnly')(data,4,2) & 0x1F;\nobj.min =  global.get('parseAsHex', 'memoryOnly')(data,6,2) & 0x3F;\nobj.sec = global.get('parseAsHex', 'memoryOnly')(data,8,2) & 0x3F;\nvar m1 = (global.get('parseAsHex', 'memoryOnly')(data,6,2)>>6)<<2;\nvar m2 = (global.get('parseAsHex', 'memoryOnly')(data,8,2)>>6);\nobj.month = m1 | m2; \n\n// unknown\nobj.unk1 = global.get('parseAsHex', 'memoryOnly')(data,4,2) >> 5;\nobj.unk2 = global.get('parseAsHex', 'memoryOnly')(data,6,2) >> 6;\nobj.unk3 = global.get('parseAsHex', 'memoryOnly')(data,8,2) >> 6;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 700,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "23385428.0b0dec",
        "type": "link in",
        "z": "d2b21613.ad4a58",
        "name": "Debug berichten IN",
        "links": [
            "af006ec9.a19bd",
            "89e800c6.7722a"
        ],
        "x": 95,
        "y": 360,
        "wires": [
            [
                "da991879.f3a6b8"
            ]
        ]
    },
    {
        "id": "66b77563.aaf92c",
        "type": "file",
        "z": "d2b21613.ad4a58",
        "name": "Log to c:\\1\\Unknown Message.txt",
        "filename": "c:\\1\\Unknown Message.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 320,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "dffca064.9ceec",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "01 = PairPong",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 660,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "91ef6c3e.5418c",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "11 = ConfigTemperatures",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 780,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "b1c39d08.78a2e",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "20 = AddLinkPartner",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 820,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "c462c16.e1b734",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "F1 = WakeUp",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 1100,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "1b1f05ac.af7dba",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "22 = SetGroupId",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 860,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "86582ae8.52a6d8",
        "type": "link out",
        "z": "d2b21613.ad4a58",
        "name": "Start Pairing",
        "links": [
            "c0f634ea.02f798",
            "d9af8067.5cce9"
        ],
        "x": 875,
        "y": 620,
        "wires": []
    },
    {
        "id": "fbb5ac95.f67d3",
        "type": "comment",
        "z": "d2b21613.ad4a58",
        "name": "Werking",
        "info": "See also: https://github.com/lucwuyts/node-red-culfw-max-interface\n\n\nDe berichten kunnen ongevraagd toekomen, daarom wordt per device bijgehouden \nop welke stap van de communicatie het zich bevindt.\n\nIeder device dat communiceert wordt daarom opgeslagen in een afzonderlijk context object\n\nWanneer een nieuw bericht van een device toekomt, wordt de toestand bekeken.\nBij een timeout, wordt BezigMet op -1 gezet => device is free.\n\n    culfw = {\n                DeviceId: device-id\n                LastMessage: datetime,\n                BezigMet: bericht-type,\n                Stap: aktie stap\n            }\n             \n    de context variable noemt \"culfw_<deviceid>\"\n    \n    BezigMet wordt geupdate in de handler van het bericht.\n\nvanaf de functie \"Update culfw status object\" wordt het culfw object meegegeven in een msg.culfw property\n\n    BezigMet = 1 -> pairing\n        Stap -1 -> nog niet geantwoord\n        Stap 1 -> PairPong sent, waiting for Ack\n        ",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "234c19b3.2ffb36",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "Update culfw status object",
        "func": "var objIn = msg.payload;\n\nvar emptyCulfw = {\n    Name: \"\",\n    deviceType: \"\",\n    serial: \"\",\n    LastMessage: 0,\n    TimeOut: -1,\n    BusyWith: -1,\n    Step: -1\n};\n    \nvar Name = \"culfw_\"+objIn.src;\nvar culfw = global.get(Name) || emptyCulfw;\n\nculfw.Name = Name;\nculfw.LastMessage = Date.now();     // time of last message\n\nglobal.set(culfw.Name,culfw);\n\nmsg.culfw = culfw;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "b4a60291.ad89a",
                "73093bc5.28ceb4"
            ]
        ]
    },
    {
        "id": "b4a60291.ad89a",
        "type": "debug",
        "z": "d2b21613.ad4a58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 520,
        "wires": []
    },
    {
        "id": "73093bc5.28ceb4",
        "type": "switch",
        "z": "d2b21613.ad4a58",
        "name": "Ack?",
        "property": "payload.msgTypeRaw",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "neq",
                "v": "02",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "02",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 660,
        "wires": [
            [
                "d11f4fd7.02d32"
            ],
            [
                "6c5f9224.2b5d8c"
            ]
        ]
    },
    {
        "id": "6c5f9224.2b5d8c",
        "type": "switch",
        "z": "d2b21613.ad4a58",
        "name": "Switch on  culfw.BusyWith",
        "property": "culfw.BusyWith",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 1160,
        "wires": [
            [
                "43f12c86.9dd704"
            ],
            []
        ]
    },
    {
        "id": "43f12c86.9dd704",
        "type": "link out",
        "z": "d2b21613.ad4a58",
        "name": "Pairing",
        "links": [
            "c0f634ea.02f798"
        ],
        "x": 375,
        "y": 1140,
        "wires": []
    },
    {
        "id": "cdeeb387.4cd0a",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Send PairPong or email",
        "func": "/*  PairPing received \n    sent a PairPong \n    if paired with another source, it should be reset.\n    Don't do this automatic: sent an email with info\n\n    output 1 -> send PairPong\n    output 2 -> send email\n    \n */\nvar config = global.get(\"culfw_config\");\n\nvar culfw = msg.culfw;\n\n// The PairPing message has an ascii id of this device\n// Add it to the culfw object\nculfw.serial = msg.payload.serial;\n\nvar msg1 = null; // pairpong output\nvar msg2 = null; // reset output\n\n// if dest != \"000000\" and not our id: this device is still paired with a different Culfw or Cube\nif( msg.payload.dst != config.DeviceId && msg.payload.dst != \"000000\"){\n    culfw.Step = -1;                 // stop waiting\n    \n    msg2 = msg;\n    \n}\nelse{\n    culfw.Step = 1;                 // wacht op Ack\n    msg1 = msg;\n}\n\n\nglobal.set( culfw.Name , culfw);\n\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 380,
        "wires": [
            [
                "efa1f042.9b4ad"
            ],
            [
                "dda03b7a.7a2b18"
            ]
        ]
    },
    {
        "id": "1cda2f8d.b50b8",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Pack and Send",
        "func": "/*  Build een bericht dat verzonden kan worden.\n\n    indien msg.sender gedefinieerd is, moet dit als verzender gebruikt worden.\n        (reset van aan ander toestel gebonden apparaat)\n        \n    msg.payload is een object met volgende properties:\n    \nmsgType - msg type raw\ndest    - destination address (3byte - 000000 for broadcast)\ngroupId - groep id\npayload - payload...\n\nZ  0E E0 05 40 17D0C0 137BFC 04 63 000000\nZs 0E 00 00 40 012345 137A0A 00 6C 000000\n\nZs0F000040012345137A0A006C000000\n\n1ste byte= lengte -> wordt hier berekend\n2de byte = msgCounter -> voorlopig 0\n3de byte flag - control byte (flag ?) -> voorlopig 0\n5de parameter = sender  - sender address (3byte) -> dit toestel, voorlopig vast.\n\n*/\n\nvar config = global.get(\"culfw_config\");\n\nvar obj = msg.payload;\nvar mySelf = \"\";\nif( msg.sender === undefined || msg.sender === null){\n    mySelf = config.DeviceId;\n}else{\n    mySelf = msg.sender;\n}\n\n\nmsgCounter = \"00\";\nflag = \"00\";\n\nvar bericht = msgCounter + flag + obj.msgType + mySelf + obj.dst + obj.groupId + obj.payload;\n\nvar len = (bericht.length / 2 + 0).toString(16);\nif( len.length == 1 ){\n    len = \"0\"+len;\n}\n\nmsg.payload = \"Zs\"+len.toString(16).toUpperCase()+bericht.toUpperCase();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 140,
        "wires": [
            [
                "19e8dcd9.fce143"
            ]
        ]
    },
    {
        "id": "8ba39b4.14e0068",
        "type": "link out",
        "z": "4eef0155.6397c",
        "name": "",
        "links": [
            "993c810.5c6668",
            "1ffa7a9.ae20785"
        ],
        "x": 1015,
        "y": 360,
        "wires": []
    },
    {
        "id": "63c99c58.70f514",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Ack received",
        "func": "// einde vd taken.\n\nvar culfw = msg.culfw;\n\n// end of this action\nculfw.BusyWith = -1;    \nculfw.Step = -1;\nglobal.set( culfw.Name , culfw);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 440,
        "wires": [
            [
                "6ef05a26.568f54"
            ]
        ]
    },
    {
        "id": "d7de046b.5a74f8",
        "type": "switch",
        "z": "4eef0155.6397c",
        "name": "Switch on culfw.Step",
        "property": "culfw.Step",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 220,
        "y": 380,
        "wires": [
            [
                "cdeeb387.4cd0a"
            ],
            [
                "63c99c58.70f514"
            ]
        ]
    },
    {
        "id": "c0f634ea.02f798",
        "type": "link in",
        "z": "4eef0155.6397c",
        "name": "Pairing",
        "links": [
            "43f12c86.9dd704",
            "86582ae8.52a6d8"
        ],
        "x": 75,
        "y": 380,
        "wires": [
            [
                "d7de046b.5a74f8"
            ]
        ]
    },
    {
        "id": "c552026f.c905d",
        "type": "tcp out",
        "z": "4eef0155.6397c",
        "host": "10.0.250.65",
        "port": "2323",
        "beserver": "client",
        "base64": false,
        "end": false,
        "name": "",
        "x": 1080,
        "y": 80,
        "wires": []
    },
    {
        "id": "6a839b60.f95504",
        "type": "inject",
        "z": "4eef0155.6397c",
        "name": "Startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "c4ed81f9.c2b11"
            ]
        ]
    },
    {
        "id": "19e8dcd9.fce143",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "add CRLF and start listening again",
        "func": "msg.payload = msg.payload + '\\r\\n';\nif( ! msg.payload.includes('Zr') ){\n    msg.payload = msg.payload + 'Zr\\r\\n';    \n}\nmsg._session = null;    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 100,
        "wires": [
            [
                "f83f5bb0.3a2f08"
            ]
        ]
    },
    {
        "id": "1ffa7a9.ae20785",
        "type": "link in",
        "z": "4eef0155.6397c",
        "name": "Send",
        "links": [
            "524ac550.271bbc",
            "8ba39b4.14e0068",
            "90d05cae.a011f",
            "c5b7c4c4.d86178"
        ],
        "x": 75,
        "y": 140,
        "wires": [
            [
                "1cda2f8d.b50b8"
            ]
        ]
    },
    {
        "id": "7839fbe7.de2674",
        "type": "comment",
        "z": "4eef0155.6397c",
        "name": "Pairing --------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 500,
        "y": 320,
        "wires": []
    },
    {
        "id": "7c05564b.bcfb88",
        "type": "debug",
        "z": "4eef0155.6397c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 720,
        "wires": []
    },
    {
        "id": "d74d919c.cc978",
        "type": "comment",
        "z": "4eef0155.6397c",
        "name": "Set Temp --------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 500,
        "y": 580,
        "wires": []
    },
    {
        "id": "77829dcc.38f5d4",
        "type": "inject",
        "z": "4eef0155.6397c",
        "name": "Zet 18°",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "18",
        "payloadType": "num",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "b741766f.080a98"
            ]
        ]
    },
    {
        "id": "f79c0d98.676ba",
        "type": "inject",
        "z": "4eef0155.6397c",
        "name": "Zet 22°",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "22",
        "payloadType": "num",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "b741766f.080a98"
            ]
        ]
    },
    {
        "id": "b741766f.080a98",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "",
        "func": "var temp = msg.payload;\n\n/*\nll - length\nnn - msg counter\ncc - control byte (flag ?)\ntt - msg type\nss - sender address (3byte)\ndd - destination address (3byte - 000000 for broadcast)\ngg - groep id\npp - payload...\n\nZ  0E E0 05 40 17D0C0 137BFC 04 63 000000\nZs 0E 00 00 40 012345 137A0A 00 6C 000000\n\nZs0F000040012345137A0A006C000000\n\n*/\nvar culfwNaam = \"culfw_137a0a\";\nvar culfw = context.get(culfwNaam) || {};\n\n// tijd wordt hier altijd aangepast\nculfw.LastMessage = Date.now();\nmsg.culfw = culfw;\n\n//-------------------------------------------------------\nvar bits = (0x40 | (temp*2 & 0x3F)).toString(16);\nvar extra = \"000000\";\n\nvar obj = {};\n\nobj.msgType = \"40\";             // pairpong\nobj.dst = \"137a0a\";\nobj.groupId = \"00\";\nobj.payload = bits + extra;\nculfw.Stap = 1;                 // wacht op Ack\n\nmsg.payload = obj;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 640,
        "wires": [
            [
                "c5b7c4c4.d86178",
                "7c05564b.bcfb88"
            ]
        ]
    },
    {
        "id": "c5b7c4c4.d86178",
        "type": "link out",
        "z": "4eef0155.6397c",
        "name": "",
        "links": [
            "993c810.5c6668",
            "1ffa7a9.ae20785"
        ],
        "x": 895,
        "y": 640,
        "wires": []
    },
    {
        "id": "e5480ec3.4d1e4",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "PairPing",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z17000400137A0A001122001001A04D4B4630303533343634",
        "payloadType": "str",
        "x": 180,
        "y": 180,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "72e46c4.5b42a94",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "Set Temperature",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0EE0054017D0C0137BFC0463000000",
        "payloadType": "str",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "edc6b61f.535798",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "TimeInformation",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0F5C050317D0C0137C0800140F56F012",
        "payloadType": "str",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "89e800c6.7722a",
        "type": "link out",
        "z": "1119b2.abf3964e",
        "name": "Debug berichten UIT",
        "links": [
            "23385428.0b0dec"
        ],
        "x": 695,
        "y": 300,
        "wires": []
    },
    {
        "id": "ad157592.cacd78",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "PairPong",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0B85000117D0C0137A0A0000",
        "payloadType": "str",
        "x": 180,
        "y": 300,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "d893fdf9.04a1f",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "Ack",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0E850202137A0A17D0C00001190F28",
        "payloadType": "str",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "dca54152.6b425",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "Wakeup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0BA400F117D0C0124C82003F",
        "payloadType": "str",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "159a5e24.4426e2",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "AddLinkPartner",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0E66002017D0C0137C0800137A0A01",
        "payloadType": "str",
        "x": 200,
        "y": 420,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "125219b7.c87296",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "SetGroupId",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0BA8002217D0C0137A0A0001",
        "payloadType": "str",
        "x": 190,
        "y": 460,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "7cdd58f6.ad5ba8",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "ConfigTemperatures",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z11E6001117D0C01171A7002A213D09071803",
        "payloadType": "str",
        "x": 210,
        "y": 500,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "7ea0b291.9249dc",
        "type": "inject",
        "z": "d2b21613.ad4a58",
        "name": "STOP RECEIVING",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "false",
        "payload": "payload",
        "payloadType": "msg",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "7d7e3a57.cc7734"
            ]
        ]
    },
    {
        "id": "7d7e3a57.cc7734",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "Receive ON/OFF",
        "func": "var okToRcv = context.get(\"onoff\");\nif( okToRcv === undefined )\n    okToRcv = true;\n\nif(msg.topic == \"false\" ){\n    okToRcv = false;\n    context.set(\"onoff\" , okToRcv )\n}\nif(msg.topic == \"true\" ){\n    okToRcv = true;\n    context.set(\"onoff\" , okToRcv )\n}\n\nif( ! okToRcv || msg.topic.length > 0 ){\n    return null;\n}\n\nmsg.topic = '';\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "74b15cb6.0ee3c4",
                "888b6aa3.4bfd78"
            ]
        ]
    },
    {
        "id": "78d97cbf.0144b4",
        "type": "inject",
        "z": "d2b21613.ad4a58",
        "name": "START RECEIVING",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "true",
        "payload": "payload",
        "payloadType": "msg",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "7d7e3a57.cc7734"
            ]
        ]
    },
    {
        "id": "efa1f042.9b4ad",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "PairPong",
        "func": "var obj = {};\n\nobj.msgType = \"01\";             // pairpong\nobj.dst = msg.payload.src;\nobj.groupId = \"00\";\nobj.payload = \"00\";\n\nmsg.payload = obj;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 360,
        "wires": [
            [
                "8ba39b4.14e0068"
            ]
        ]
    },
    {
        "id": "50f426f4.d4c488",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Send Reset",
        "func": "/* RESET\n\n    msg.sender = send in name of...\n    msg.dest = destination \n\n*/\nobj = {};\nobj.msgType = \"F0\";             // reset\nobj.dst = msg.dst;\nobj.src = msg.src;\nobj.groupId = \"00\";\nobj.payload = \"00\";\n\nmsg.payload = obj;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 180,
        "wires": [
            [
                "1cda2f8d.b50b8"
            ]
        ]
    },
    {
        "id": "ea5a5613.cc4ba8",
        "type": "link in",
        "z": "4eef0155.6397c",
        "name": "Send Reset",
        "links": [
            "37d04547.f7048a",
            "d161ac8c.7b06b"
        ],
        "x": 75,
        "y": 180,
        "wires": [
            [
                "50f426f4.d4c488"
            ]
        ]
    },
    {
        "id": "f8a72080.2487b",
        "type": "debug",
        "z": "4eef0155.6397c",
        "name": "Message to culfw controller",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 140,
        "wires": []
    },
    {
        "id": "f83f5bb0.3a2f08",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Queue",
        "func": "// messages need to be separated from each other when sending.\n// this queue holds messages.\n//\n// if a message arrives for the same device with the same message id, \n// than an existing message, the old message is replaced with the new.\n//----------------------------------------------------------------------\nvar queue = context.get(\"queue\") || [];\n\n// Control messages do not start with \"Z\"\nvar ctrlMessage = false;\nif( typeof(msg.payload) != 'boolean'){\n    ctrlMessage = ! msg.payload.startsWith(\"Z\");\n}\n\nif( typeof(msg.payload) != 'boolean' && !ctrlMessage ){\n    var obj = msg.payload;\n    var ix = -1;\n    for( i = 0 ; i < queue.length; i++){\n        var el = queue[i];\n        if( el.culfw.Name == obj.culfw.Name \n            && el.culfw.BusyWith == obj.culfw.BusyWith\n        ){\n            ix = i;\n            break;\n        }\n    }\n    if( ix >= 0){\n        queue[ix] = obj;\n    }else{\n        queue.push(obj);\n    }\n    // send empty message\n    msg = null;\n}\nelse{\n    if( queue.length > 0){\n        msg = {payload: queue.shift() };\n    }else{\n        msg = null;\n    }\n}\n\ncontext.set(\"queue\",queue);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 810,
        "y": 100,
        "wires": [
            [
                "f8a72080.2487b",
                "c552026f.c905d"
            ]
        ]
    },
    {
        "id": "ec027403.a577f8",
        "type": "inject",
        "z": "4eef0155.6397c",
        "name": "Queue Sending rate",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "f83f5bb0.3a2f08"
            ]
        ]
    },
    {
        "id": "6ef05a26.568f54",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Prepare email",
        "func": "msg.payload = \"culfw device paired\"\n              + \"\\r\\nDeviceId: \"+msg.payload.src\n              + \"\\r\\nType: \"+msg.culfw.deviceType\n              + \"\\r\\nSerial: \"+msg.culfw.serial; \nmsg.from = \"luc.wuyts@a-d-e.net\";\nmsg.topic = \"CULFW Pairing message\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 440,
        "wires": [
            [
                "46da017c.28168"
            ]
        ]
    },
    {
        "id": "7080d502.594c4c",
        "type": "config",
        "z": "240222d6.2d9b9e",
        "name": "Config - on startup",
        "properties": [
            {
                "p": "culfw_config",
                "pt": "global",
                "to": "{\"Name\":\"Cube1\",\"IP\":\"10.0.250.65\",\"Port\":\"2323\",\"DeviceId\":\"001122\",\"AllowPairing\":false}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 190,
        "y": 80,
        "wires": []
    },
    {
        "id": "66e8cbe1.2da474",
        "type": "e-mail",
        "z": "240222d6.2d9b9e",
        "server": "smtp.scarlet.be",
        "port": "25",
        "secure": false,
        "tls": false,
        "name": "luc.wuyts@a-d-e.net",
        "dname": "",
        "x": 220,
        "y": 160,
        "wires": []
    },
    {
        "id": "c943dfbe.8e51",
        "type": "link in",
        "z": "240222d6.2d9b9e",
        "name": "Send Email",
        "links": [
            "46da017c.28168"
        ],
        "x": 75,
        "y": 160,
        "wires": [
            [
                "66e8cbe1.2da474"
            ]
        ]
    },
    {
        "id": "46da017c.28168",
        "type": "link out",
        "z": "4eef0155.6397c",
        "name": "Send Email",
        "links": [
            "c943dfbe.8e51"
        ],
        "x": 1015,
        "y": 440,
        "wires": []
    },
    {
        "id": "2ae31786.0670d8",
        "type": "comment",
        "z": "4eef0155.6397c",
        "name": "Send Time  --------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 510,
        "y": 780,
        "wires": []
    },
    {
        "id": "80ff219b.951ea",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Send AddLinkPartner",
        "func": "/* msg.payload = {\n    'dest': 'xxxxxx',           // send this message to this address\n    'partnerToLink': 'yyyyyy'   // address of partner to link\n}\n\n*/\nvar obj = {};\n\nobj.msgType = \"20\";             // AddLinkPartner\nobj.dest = msg.payload.dest;\nobj.groupId = \"00\";\nobj.payload = msg.payload.partnerToLink + \"01\";\n\nmsg.payload = obj;\n\n\n// when this command is send, there is not yet a culfw object\n// \nvar emptyCulfw = {\n    Name: \"\",\n    LastMessage: 0,\n    TimeOut: -1,\n    BusyWith: -1,\n    Step: -1\n};\n\nvar config = global.get(\"culfw_config\");\n\nvar Name = \"culfw_\"+config.DeviceId;    \nvar culfw = global.get(Name) || emptyCulfw;\n\nculfw.Name = Name;\n// tijd wordt hier altijd aangepast\nculfw.LastMessage = Date.now();\nculfw.BusyWith = 2;\nculfw.Step = 1;\n\nglobal.set(culfw.Name,culfw);\n\nmsg.culfw = culfw;\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 1100,
        "wires": [
            [
                "90d05cae.a011f",
                "7c05564b.bcfb88"
            ]
        ]
    },
    {
        "id": "90d05cae.a011f",
        "type": "link out",
        "z": "4eef0155.6397c",
        "name": "",
        "links": [
            "1ffa7a9.ae20785"
        ],
        "x": 915,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f4618df3.42eec",
        "type": "switch",
        "z": "4eef0155.6397c",
        "name": "Switch on culfw.Step",
        "property": "culfw.Step",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 1140,
        "wires": [
            [
                "80ff219b.951ea"
            ],
            [
                "ed7adc17.87b52"
            ]
        ]
    },
    {
        "id": "ed7adc17.87b52",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Ack received",
        "func": "// einde vd taken.\n\nvar culfw = msg.culfw;\n\n// end of this action\nculfw.BusyWith = -1;    \nculfw.Step = -1;\nglobal.set( culfw.Name , culfw);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "c4bfc70f.b19d68",
        "type": "link in",
        "z": "4eef0155.6397c",
        "name": "",
        "links": [],
        "x": 95,
        "y": 1140,
        "wires": [
            [
                "f4618df3.42eec"
            ]
        ]
    },
    {
        "id": "d781c4f.3efad38",
        "type": "link in",
        "z": "4eef0155.6397c",
        "name": "Start Send AddLinkPartner",
        "links": [
            "4d664945.c17fc8",
            "fbba06a9.339938"
        ],
        "x": 95,
        "y": 1100,
        "wires": [
            [
                "80ff219b.951ea"
            ]
        ]
    },
    {
        "id": "452e7d5f.cd6524",
        "type": "comment",
        "z": "1119b2.abf3964e",
        "name": "Parse Test ---------------------------------------------------------------------------------------",
        "info": "",
        "x": 390,
        "y": 60,
        "wires": []
    },
    {
        "id": "5ffeec57.24b7a4",
        "type": "comment",
        "z": "1119b2.abf3964e",
        "name": "Send Test ---------------------------------------------------------------------------------------",
        "info": "",
        "x": 390,
        "y": 660,
        "wires": []
    },
    {
        "id": "b2b4f71b.30faf8",
        "type": "inject",
        "z": "4eef0155.6397c",
        "name": "AddLinkPartner",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1240,
        "wires": [
            [
                "c1902911.7c6808"
            ]
        ]
    },
    {
        "id": "fbba06a9.339938",
        "type": "link out",
        "z": "4eef0155.6397c",
        "name": "",
        "links": [
            "d781c4f.3efad38"
        ],
        "x": 635,
        "y": 1240,
        "wires": []
    },
    {
        "id": "c1902911.7c6808",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "",
        "func": "msg.payload = {\n    \"dest\": \"0fb74e\",           // shutter contact i'm playing with\n    \"partnerToLink\": \"137a0a\"   // thermostat valve\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 1240,
        "wires": [
            [
                "fbba06a9.339938"
            ]
        ]
    },
    {
        "id": "98824b1.f883eb8",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "Debug Filtering",
        "func": "/* when filterOn, incoming messages with only specific addresses will pass.\n   (src or dst)\n */\n\nvar filterOn = true;\n\nif( filterOn ){\n    // array with allowed addresses.\n    var addr = [\"137a0a\" , \"124c82\"];\n    //var addr = [\"124c82\"];\n    var objIn = msg.payload;\n    \n    var letpass = false;\n    for( i = 0; i < addr.length; i++){\n        var adr = addr[i];\n        if( objIn.dst === adr || objIn.src === adr ){\n            letpass = true;\n            break;\n        }\n    }\n    \n    if( !letpass ){\n        return null;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 460,
        "wires": [
            [
                "234c19b3.2ffb36"
            ]
        ]
    },
    {
        "id": "a3604b1d.97a938",
        "type": "file",
        "z": "d2b21613.ad4a58",
        "name": "Log to c:\\1\\All Messages.txt",
        "filename": "c:\\1\\All Messages.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 820,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2bdb096f.39ffe6",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "10 = ConfigWeekProfile",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 740,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "c233758b.5af6a8",
        "type": "comment",
        "z": "4eef0155.6397c",
        "name": "AddLinkPartner --------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "info": "",
        "x": 520,
        "y": 1040,
        "wires": []
    },
    {
        "id": "fcc9747c.b742e8",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Send Time",
        "func": "/* msg.payload = {\n    'dest': 'xxxxxx',           // send the time to this address\n   }\n\n*/\n\nfunction Byte2Hex( b ){\n    var hex = (b + 0).toString(16);\n    if( hex.length == 1 ){\n        hex = \"0\"+hex;\n    }\n    return hex;\n}\n\n\nvar obj = {};\nobj.msgType = \"03\";             // TimeInformation\nobj.dest = msg.payload.dest;\nobj.groupId = \"00\";\n\nvar date = new Date();\nvar hh = date.getHours();\nvar mm = date.getMinutes();\nvar ss = date.getSeconds();\nvar YY = date.getFullYear()-2000;\nvar MM = date.getMonth();\nvar dd = date.getDate();\n\n// minutes shares byte with month\nvar bTmp1 = mm + ((MM & 0xC)<<4);\n\n// seconds shares byte with month\nvar bTmp2 = ss + ((MM & 0x3)<<6);\n\nobj.payload = Byte2Hex(YY)+Byte2Hex(dd)+Byte2Hex(hh)+Byte2Hex(bTmp1)+Byte2Hex(bTmp2);\n\n\nmsg.payload = obj;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 840,
        "wires": [
            [
                "524ac550.271bbc",
                "7c05564b.bcfb88"
            ]
        ]
    },
    {
        "id": "524ac550.271bbc",
        "type": "link out",
        "z": "4eef0155.6397c",
        "name": "",
        "links": [
            "993c810.5c6668",
            "1ffa7a9.ae20785"
        ],
        "x": 895,
        "y": 840,
        "wires": []
    },
    {
        "id": "d68e65c5.dc7068",
        "type": "inject",
        "z": "4eef0155.6397c",
        "name": "Send Time to WallThermostat   124c82",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"dest\":\"124c82\"}",
        "payloadType": "json",
        "x": 210,
        "y": 840,
        "wires": [
            [
                "fcc9747c.b742e8"
            ]
        ]
    },
    {
        "id": "c67728a8.5a03a8",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "WallThermostatState",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0F4A0470124C820000000059012100FE",
        "payloadType": "str",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "5437156b.65840c",
        "type": "function",
        "z": "d2b21613.ad4a58",
        "name": "70 = WallThermostatState",
        "func": "// Incoming message\n// Z0F 22 04 70 124C82 000000 00 590127010B\n// payload is 10 long !!\n// -- source in ref.lib says it's 14 long ???\n\nvar obj = msg.payload;\nvar data = msg.payload.payload;\n\nvar bits2 = global.get('parseAsHex','memoryonly')(data,0,2);\nobj.displayActualTemp = global.get('parseAsHex','memoryonly')(data,2,2);\nobj.desiredTemp = global.get('parseAsHex','memoryonly')(data,4,2) / 2;\nvar null1 = global.get('parseAsHex','memoryonly')(data,6,2);\nobj.measuredTemp = global.get('parseAsHex','memoryonly')(data,8,2)/10;\n\nobj.mode = global.get('getBits','memoryonly')(bits2, 0, 2);\nvar ctrlmode = global.get('get_ctrl_mode','memoryonly')(obj.mode);\nobj.modeStr =  ctrlmode ? ctrlmode : obj.mode;\nobj.dstsetting = global.get('getBits','memoryonly')(bits2, 3, 1);      //is automatically switching to DST activated\nobj.langateway = global.get('getBits','memoryonly')(bits2, 4, 1);      //??\nobj.panel = global.get('getBits','memoryonly')(bits2, 5, 1);           //1 if the heating thermostat is locked for manually setting the temperature at the device\nobj.rferror = global.get('getBits','memoryonly')(bits2, 6, 1);         //communication with link partner (what does that mean?)\nobj.batterylow = global.get('getBits','memoryonly')(bits2, 7, 1);      //1 if battery is low\nobj.battery = obj.batterylow ? \"low\" : \"ok\";\n\nif (obj.heaterTemp == 0) obj.heaterTemp = null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 1060,
        "wires": [
            [
                "c7fea7e9.cfb6f8"
            ]
        ]
    },
    {
        "id": "c23b396d.f15088",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "WallThermostatControl",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0C000442113AD30C4F0D001CB41D",
        "payloadType": "str",
        "x": 220,
        "y": 580,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "f7beb14f.716f3",
        "type": "catch",
        "z": "d2b21613.ad4a58",
        "name": "",
        "scope": null,
        "uncaught": true,
        "x": 120,
        "y": 100,
        "wires": [
            [
                "8956ac74.968c2"
            ]
        ]
    },
    {
        "id": "8956ac74.968c2",
        "type": "debug",
        "z": "d2b21613.ad4a58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 100,
        "wires": []
    },
    {
        "id": "f105db37.fc4128",
        "type": "inject",
        "z": "240222d6.2d9b9e",
        "name": "On startup",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "9e29c380.3e93c"
            ]
        ]
    },
    {
        "id": "9e29c380.3e93c",
        "type": "function",
        "z": "240222d6.2d9b9e",
        "name": "Define functions",
        "func": "\nglobal.set('get_ctrl_mode',function(value){\n    \n     var ctrl_modes = { \n    \t'0' : \"auto\",\n    \t'1' : \"manual\",\n    \t'2' : \"temporary\",\n    \t'3' : \"boost\",\n    }; \n\n    return ctrl_modes[value];\n}, 'memoryOnly');\n\nglobal.set('get_deviceType',function(value){\n    var device_types = {\n        \"0\" : \"Cube\",\n        \"1\" : \"HeatingThermostat\",\n        \"2\" : \"HeatingThermostatPlus\",\n        \"3\" : \"WallMountedThermostat\",\n        \"4\" : \"ShutterContact\",\n        \"5\" : \"PushButton\",\n        \"6\" : \"virtualShutterContact\",\n        \"7\" : \"virtualThermostat\",\n        \"8\" : \"PlugAdapter\",\n        \"9\" : \"new\"\n    };\n    return device_types[value];\n},'memoryOnly');\n\n\n\nglobal.set('msgId2Cmd',function(val){\n    var msgIdCmd = {\n        \t\"00\" : \"PairPing\",\n            \"01\" : \"PairPong\",\n            \"02\" : \"Ack\",\n            \"03\" : \"TimeInformation\",\n            \"10\" : \"ConfigWeekProfile\",\n            \"11\" : \"ConfigTemperatures\", //like eco/comfort etc\n            \"12\" : \"ConfigValve\",\n            \"20\" : \"AddLinkPartner\",\n            \"21\" : \"RemoveLinkPartner\",\n            \"22\" : \"SetGroupId\",\n            \"23\" : \"RemoveGroupId\",\n            \"30\" : \"ShutterContactState\",\n            \"40\" : \"SetTemperature\", //to thermostat\n            \"42\" : \"WallThermostatControl\", //by WallMountedThermostat\n            //Sending this without payload to thermostat sets desiredTemperature to the comfort/eco temperature\n            //We don't use it, we just do SetTemperature\n            \"43\" : \"SetComfortTemperature\",\n            \"44\" : \"SetEcoTemperature\",\n            \"50\" : \"PushButtonState\",\n            \"60\" : \"ThermostatState\", //by HeatingThermostat\n            \"70\" : \"WallThermostatState\",\n            \"82\" : \"SetDisplayActualTemperature\",\n            \"F1\" : \"WakeUp\",\n            \"F0\" : \"Reset\",\n    };\n    return msgIdCmd[val];\n},'memoryOnly');\n\n\n// return message length without RSSI information\n// (include leading Z)\nglobal.set('get_messageLength',function(val){\n    var len = {\n        \t\"00\" : 49,   // \"PairPing\",\n            \"01\" : 0,    // \"PairPong\",\n            \"02\" : 0,    // \"Ack\",\n            \"03\" : 0,    // \"TimeInformation\",\n            \"10\" : 0,    // \"ConfigWeekProfile\",\n            \"11\" : 0,    // \"ConfigTemperatures\", //like eco/comfort etc\n            \"12\" : 0,    // \"ConfigValve\",\n            \"20\" : 0,    // \"AddLinkPartner\",\n            \"21\" : 0,    // \"RemoveLinkPartner\",\n            \"22\" : 0,    // \"SetGroupId\",\n            \"23\" : 0,    // \"RemoveGroupId\",\n            \"30\" : 25,   // \"ShutterContactState\",\n            \"40\" : 25,   // \"SetTemperature\", //to thermostat\n            \"42\" : 27,    // \"WallThermostatControl\", //by WallMountedThermostat\n            //Sending this without payload to thermostat sets desiredTemperature to the comfort/eco temperature\n            //We don't use it, we just do SetTemperature\n            \"43\" : 0,    // \"SetComfortTemperature\",\n            \"44\" : 0,    // \"SetEcoTemperature\",\n            \"50\" : 0,    // \"PushButtonState\",\n            \"60\" : 33,   // \"ThermostatState\", //by HeatingThermostat\n            \"70\" : 0,    // \"WallThermostatState\",\n            \"82\" : 0,    // \"SetDisplayActualTemperature\",\n            \"F1\" : 0,    // \"WakeUp\",\n            \"F0\" : 0,    // \"Reset\",\n    };\n    return len[val];\n},'memoryOnly');\n\n\n// str = input string\n// start = starting position in str\n// len = string length in str\n// return:  part of string is parsed as a hex number to decimal.\nglobal.set('parseAsHex' , function( str , start, len ){\n    return parseInt( Number(\"0x\"+str.substr(start,len)) , 10 );\n},'memoryOnly');\n\n\nglobal.set('hex_to_ascii',function (str1) {\n\tvar hex  = str1.toString();\n\tvar str = '';\n\tfor (var n = 0; n < hex.length; n += 2) {\n\t\tstr += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n\t}\n\treturn str;\n },'memoryOnly');\n \n \n \n global.set('getBits',function(value, offset, len) {\n        var mask = 0;\n        while (len > 0) {\n                mask = mask << 1;\n                mask++;\n                len--;\n        }\n        return ((value >> offset) & mask);\n}, 'memoryOnly');\n \n \n\n\nglobal.set( 'MAX_ParseDateTime' , function (byte1, byte2, byte3) {\n\tvar result = {};\n\tresult.day = byte1 & 0x1F;\n\tresult.month = ((byte1 & 0xE0) >> 4) | (byte2 >> 7);\n\tresult.year = byte2 & 0x3F;\n\tvar time = byte3 & 0x3F;\n\tif ((time % 2) > 0)\n\t\tresult.time = (time / 2) + \":30\";\n\telse\n\t\tresult.time = (time / 2) + \":00\";\n\n\tresult.str = result.day+\".\"+result.month+\".\"+result.year+\" \"+result.time;\n\treturn result;\n}, 'memoryOnly');\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "3237d4bb.05beac",
        "type": "comment",
        "z": "240222d6.2d9b9e",
        "name": "Define Functions",
        "info": "",
        "x": 150,
        "y": 240,
        "wires": []
    },
    {
        "id": "fb6968d0.349b78",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "ShutterContactState",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Z0B1206300FB74E0011220012",
        "payloadType": "str",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "89e800c6.7722a"
            ]
        ]
    },
    {
        "id": "7b4576d2.514668",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "email - paired with other",
        "func": "msg.payload = \"culfw device is already paired with unknown source..\"\n              + \"\\r\\This device: \"+msg.payload.src\n              + \"\\r\\nPaired with: \"+msg.payload.dst\n              + \"\\r\\nType: \"+msg.culfw.deviceType\n              + \"\\r\\nSerial: \"+msg.culfw.serial; \nmsg.from = \"luc.wuyts@a-d-e.net\";\nmsg.topic = \"CULFW Pairing message - FAILED\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 400,
        "wires": [
            [
                "46da017c.28168"
            ]
        ]
    },
    {
        "id": "6303f6e8.c9e938",
        "type": "inject",
        "z": "1119b2.abf3964e",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "sender",
                "v": "001122",
                "vt": "str"
            },
            {
                "p": "dest",
                "v": "137a0a",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "d161ac8c.7b06b"
            ]
        ]
    },
    {
        "id": "d161ac8c.7b06b",
        "type": "link out",
        "z": "1119b2.abf3964e",
        "name": "",
        "links": [
            "ea5a5613.cc4ba8"
        ],
        "x": 655,
        "y": 700,
        "wires": []
    },
    {
        "id": "cd9d6735.35f3b8",
        "type": "inject",
        "z": "27628eec.90fe82",
        "name": "Reboot CUL",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "B00",
        "payloadType": "str",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "91617ff4.f200b"
            ]
        ]
    },
    {
        "id": "91617ff4.f200b",
        "type": "link out",
        "z": "27628eec.90fe82",
        "name": "",
        "links": [
            "9bd59bd5.ff4d18"
        ],
        "x": 635,
        "y": 140,
        "wires": []
    },
    {
        "id": "488da49c.c44f5c",
        "type": "inject",
        "z": "27628eec.90fe82",
        "name": "Get MAC",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Rim",
        "payloadType": "str",
        "x": 220,
        "y": 180,
        "wires": [
            [
                "91617ff4.f200b"
            ]
        ]
    },
    {
        "id": "2de449dc.87b066",
        "type": "inject",
        "z": "27628eec.90fe82",
        "name": "GET IP",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Ria",
        "payloadType": "str",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "91617ff4.f200b"
            ]
        ]
    },
    {
        "id": "3dd8b7ca.cb7a08",
        "type": "inject",
        "z": "27628eec.90fe82",
        "name": "GET Time running",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "t",
        "payloadType": "str",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "91617ff4.f200b"
            ]
        ]
    },
    {
        "id": "9bd59bd5.ff4d18",
        "type": "link in",
        "z": "4eef0155.6397c",
        "name": "Send Raw",
        "links": [
            "91617ff4.f200b"
        ],
        "x": 75,
        "y": 100,
        "wires": [
            [
                "19e8dcd9.fce143"
            ]
        ]
    },
    {
        "id": "d177e570.e45ea8",
        "type": "comment",
        "z": "27628eec.90fe82",
        "name": "To see the output in the debug window - switch on \"does not start with Z\"",
        "info": "",
        "x": 400,
        "y": 40,
        "wires": []
    },
    {
        "id": "d1ba929f.a82a2",
        "type": "inject",
        "z": "27628eec.90fe82",
        "name": "X - RF Time left ?? (unclear)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "X",
        "payloadType": "str",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "91617ff4.f200b"
            ]
        ]
    },
    {
        "id": "d6803507.66b518",
        "type": "inject",
        "z": "27628eec.90fe82",
        "name": "Add RSSI info",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "X20",
        "payloadType": "str",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "91617ff4.f200b"
            ]
        ]
    },
    {
        "id": "8930a408.953108",
        "type": "inject",
        "z": "27628eec.90fe82",
        "name": "NO  RSSI info",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "X00",
        "payloadType": "str",
        "x": 210,
        "y": 380,
        "wires": [
            [
                "91617ff4.f200b"
            ]
        ]
    },
    {
        "id": "ed378889.e64458",
        "type": "comment",
        "z": "27628eec.90fe82",
        "name": "After sending, resend   Enable Moritz",
        "info": "",
        "x": 290,
        "y": 80,
        "wires": []
    },
    {
        "id": "c4ed81f9.c2b11",
        "type": "function",
        "z": "4eef0155.6397c",
        "name": "Enable RSSI and Moritz protocol",
        "func": "msg1 = { payload: \"X20\"};\nmsg2 = { payload: \"Zr\" };\nreturn [[msg1,msg2]];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 40,
        "wires": [
            [
                "19e8dcd9.fce143"
            ]
        ]
    },
    {
        "id": "dda03b7a.7a2b18",
        "type": "rbe",
        "z": "4eef0155.6397c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 670,
        "y": 400,
        "wires": [
            [
                "7b4576d2.514668"
            ]
        ]
    },
    {
        "id": "4fb2e47e.2691ac",
        "type": "debug",
        "z": "d2b21613.ad4a58",
        "name": "ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 460,
        "wires": []
    },
    {
        "id": "593250fd.cfaeb",
        "type": "ui_button",
        "z": "9f49092d.477e18",
        "name": "",
        "group": "8a50f58a.83fee8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start Pairing",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "1bf907c8.57a548",
                "f695bde1.72e36",
                "4d33500f.6a1c2"
            ]
        ]
    },
    {
        "id": "4d33500f.6a1c2",
        "type": "debug",
        "z": "9f49092d.477e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 120,
        "wires": []
    },
    {
        "id": "1bf907c8.57a548",
        "type": "function",
        "z": "9f49092d.477e18",
        "name": "Set On",
        "func": "msg.enabled = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 180,
        "wires": [
            [
                "5180e43d.0d706c",
                "5ac1fa22.cb5394"
            ]
        ]
    },
    {
        "id": "f695bde1.72e36",
        "type": "delay",
        "z": "9f49092d.477e18",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 520,
        "y": 60,
        "wires": [
            [
                "55f2ece3.6e4214"
            ]
        ]
    },
    {
        "id": "55f2ece3.6e4214",
        "type": "function",
        "z": "9f49092d.477e18",
        "name": "Set Off",
        "func": "msg.enabled = true;\nmsg.payload = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "5180e43d.0d706c"
            ]
        ]
    },
    {
        "id": "d1d164af.50de48",
        "type": "inject",
        "z": "9f49092d.477e18",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "55f2ece3.6e4214"
            ]
        ]
    },
    {
        "id": "5180e43d.0d706c",
        "type": "function",
        "z": "9f49092d.477e18",
        "name": "Save AllowPairing",
        "func": "var config = global.get(\"culfw_config\");\nconfig.AllowPairing = msg.payload;\nglobal.set(\"culfw_config\",config);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "593250fd.cfaeb"
            ]
        ]
    },
    {
        "id": "85a4d344.15d49",
        "type": "ui_template",
        "z": "9f49092d.477e18",
        "group": "8a50f58a.83fee8",
        "name": "",
        "order": 2,
        "width": "14",
        "height": "13",
        "format": "<table>\n    <tr ng-repeat=\"x in msg.payload\" >\n        <td>{{x}}</td>\n    </tr>\n</table>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5ac1fa22.cb5394",
        "type": "function",
        "z": "9f49092d.477e18",
        "name": "",
        "func": "// Show information about pairing \n// Text is reset when pairing starts.\n//\n\nvar lines = context.get(\"lines\") || [];\n\n// starts pairing\nif( typeof(msg.payload) === 'boolean' ){\n    lines = [];\n    lines.push(\"Pairing Started\");\n}\nelse{\n    lines.push(msg.payload + lines.length);\n}\n\ncontext.set(\"lines\",lines);\n\nmsg = { payload: lines };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 300,
        "wires": [
            [
                "85a4d344.15d49",
                "2f0e0a08.b2eae6"
            ]
        ]
    },
    {
        "id": "83261aa6.0d8f68",
        "type": "inject",
        "z": "9f49092d.477e18",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Testing....",
        "payloadType": "str",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "5ac1fa22.cb5394"
            ]
        ]
    },
    {
        "id": "2f0e0a08.b2eae6",
        "type": "debug",
        "z": "9f49092d.477e18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 380,
        "wires": []
    }
]